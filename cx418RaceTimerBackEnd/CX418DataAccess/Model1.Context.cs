//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CX418DataAccess
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class cx418timingEntities : DbContext
    {
        public cx418timingEntities()
            : base("name=cx418timingEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<LapTime> LapTimes { get; set; }
        public virtual DbSet<Race> Races { get; set; }
        public virtual DbSet<Event> Events { get; set; }
    
        public virtual int sp_InsertLapTime(Nullable<int> bibId, Nullable<int> raceId, Nullable<System.DateTime> lapEndDateTime)
        {
            var bibIdParameter = bibId.HasValue ?
                new ObjectParameter("BibId", bibId) :
                new ObjectParameter("BibId", typeof(int));
    
            var raceIdParameter = raceId.HasValue ?
                new ObjectParameter("RaceId", raceId) :
                new ObjectParameter("RaceId", typeof(int));
    
            var lapEndDateTimeParameter = lapEndDateTime.HasValue ?
                new ObjectParameter("LapEndDateTime", lapEndDateTime) :
                new ObjectParameter("LapEndDateTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertLapTime", bibIdParameter, raceIdParameter, lapEndDateTimeParameter);
        }
    }
}
